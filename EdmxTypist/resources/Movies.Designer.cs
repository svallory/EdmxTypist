//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Movies", "FK_movies_genres", "genre", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(EdmxTypist.resources.Genre), "movie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EdmxTypist.resources.Movie), true)]
[assembly: EdmRelationshipAttribute("Movies", "FK_roles_movies", "movie", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EdmxTypist.resources.Movie), "role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EdmxTypist.resources.Role), true)]
[assembly: EdmRelationshipAttribute("Movies", "FK_roles_people", "person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EdmxTypist.resources.Person), "role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EdmxTypist.resources.Role), true)]

#endregion

namespace EdmxTypist.resources
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MoviesContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MoviesContainer object using the connection string found in the 'MoviesContainer' section of the application configuration file.
        /// </summary>
        public MoviesContainer() : base("name=MoviesContainer", "MoviesContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MoviesContainer object.
        /// </summary>
        public MoviesContainer(string connectionString) : base(connectionString, "MoviesContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MoviesContainer object.
        /// </summary>
        public MoviesContainer(EntityConnection connection) : base(connection, "MoviesContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Genre> Genres
        {
            get
            {
                if ((_Genres == null))
                {
                    _Genres = base.CreateObjectSet<Genre>("Genres");
                }
                return _Genres;
            }
        }
        private ObjectSet<Genre> _Genres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Movie> Movies
        {
            get
            {
                if ((_Movies == null))
                {
                    _Movies = base.CreateObjectSet<Movie>("Movies");
                }
                return _Movies;
            }
        }
        private ObjectSet<Movie> _Movies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> RolesTwo
        {
            get
            {
                if ((_RolesTwo == null))
                {
                    _RolesTwo = base.CreateObjectSet<Role>("RolesTwo");
                }
                return _RolesTwo;
            }
        }
        private ObjectSet<Role> _RolesTwo;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Genres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenres(Genre genre)
        {
            base.AddObject("Genres", genre);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Movies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMovies(Movie movie)
        {
            base.AddObject("Movies", movie);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RolesTwo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRolesTwo(Role role)
        {
            base.AddObject("RolesTwo", role);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Movies", Name="Genre")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Genre : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Genre object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Genre CreateGenre(global::System.Int32 id, global::System.String name)
        {
            Genre genre = new Genre();
            genre.Id = id;
            genre.Name = name;
            return genre;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Movies", "FK_movies_genres", "movie")]
        public EntityCollection<Movie> Movies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Movie>("Movies.FK_movies_genres", "movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Movie>("Movies.FK_movies_genres", "movie", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Movies", Name="Movie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Movie : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Movie object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="shooting">Initial value of the Shooting property.</param>
        public static Movie CreateMovie(global::System.Int32 id, global::System.String name, Location shooting)
        {
            Movie movie = new Movie();
            movie.Id = id;
            movie.Name = name;
            movie.Shooting = StructuralObject.VerifyComplexObjectIsNotNull(shooting, "Shooting");
            return movie;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Synopsis
        {
            get
            {
                return _Synopsis;
            }
            set
            {
                OnSynopsisChanging(value);
                ReportPropertyChanging("Synopsis");
                _Synopsis = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Synopsis");
                OnSynopsisChanged();
            }
        }
        private global::System.String _Synopsis;
        partial void OnSynopsisChanging(global::System.String value);
        partial void OnSynopsisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Published
        {
            get
            {
                return _Published;
            }
            set
            {
                OnPublishedChanging(value);
                ReportPropertyChanging("Published");
                _Published = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Published");
                OnPublishedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Published;
        partial void OnPublishedChanging(Nullable<global::System.DateTime> value);
        partial void OnPublishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GenreId
        {
            get
            {
                return _GenreId;
            }
            set
            {
                OnGenreIdChanging(value);
                ReportPropertyChanging("GenreId");
                _GenreId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenreId");
                OnGenreIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GenreId;
        partial void OnGenreIdChanging(Nullable<global::System.Int32> value);
        partial void OnGenreIdChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Location Shooting
        {
            get
            {
                _Shooting = GetValidValue(_Shooting, "Shooting", false, _ShootingInitialized);
                _ShootingInitialized = true;
                return _Shooting;
            }
            set
            {
                OnShootingChanging(value);
                ReportPropertyChanging("Shooting");
                _Shooting = SetValidValue(_Shooting, value, "Shooting");
                _ShootingInitialized = true;
                ReportPropertyChanged("Shooting");
                OnShootingChanged();
            }
        }
        private Location _Shooting;
        private bool _ShootingInitialized;
        partial void OnShootingChanging(Location value);
        partial void OnShootingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Movies", "FK_movies_genres", "genre")]
        public Genre Genre
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("Movies.FK_movies_genres", "genre").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("Movies.FK_movies_genres", "genre").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Genre> GenreReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Genre>("Movies.FK_movies_genres", "genre");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Genre>("Movies.FK_movies_genres", "genre", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Movies", "FK_roles_movies", "role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("Movies.FK_roles_movies", "role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("Movies.FK_roles_movies", "role", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Movies", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="birthplace">Initial value of the Birthplace property.</param>
        public static Person CreatePerson(global::System.Int32 id, global::System.String name, Location birthplace)
        {
            Person person = new Person();
            person.Id = id;
            person.Name = name;
            person.Birthplace = StructuralObject.VerifyComplexObjectIsNotNull(birthplace, "Birthplace");
            return person;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BirthDate
        {
            get
            {
                return _BirthDate;
            }
            set
            {
                OnBirthDateChanging(value);
                ReportPropertyChanging("BirthDate");
                _BirthDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDate");
                OnBirthDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BirthDate;
        partial void OnBirthDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Location Birthplace
        {
            get
            {
                _Birthplace = GetValidValue(_Birthplace, "Birthplace", false, _BirthplaceInitialized);
                _BirthplaceInitialized = true;
                return _Birthplace;
            }
            set
            {
                OnBirthplaceChanging(value);
                ReportPropertyChanging("Birthplace");
                _Birthplace = SetValidValue(_Birthplace, value, "Birthplace");
                _BirthplaceInitialized = true;
                ReportPropertyChanged("Birthplace");
                OnBirthplaceChanged();
            }
        }
        private Location _Birthplace;
        private bool _BirthplaceInitialized;
        partial void OnBirthplaceChanging(Location value);
        partial void OnBirthplaceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Movies", "FK_roles_people", "role")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("Movies.FK_roles_people", "role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("Movies.FK_roles_people", "role", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Movies", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="movieId">Initial value of the MovieId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.Int32 personId, global::System.Int32 movieId, global::System.String name)
        {
            Role role = new Role();
            role.Id = id;
            role.PersonId = personId;
            role.MovieId = movieId;
            role.Name = name;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Int32 _PersonId;
        partial void OnPersonIdChanging(global::System.Int32 value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MovieId
        {
            get
            {
                return _MovieId;
            }
            set
            {
                OnMovieIdChanging(value);
                ReportPropertyChanging("MovieId");
                _MovieId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MovieId");
                OnMovieIdChanged();
            }
        }
        private global::System.Int32 _MovieId;
        partial void OnMovieIdChanging(global::System.Int32 value);
        partial void OnMovieIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Movies", "FK_roles_movies", "movie")]
        public Movie Movie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("Movies.FK_roles_movies", "movie").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("Movies.FK_roles_movies", "movie").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Movie> MovieReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Movie>("Movies.FK_roles_movies", "movie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Movie>("Movies.FK_roles_movies", "movie", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Movies", "FK_roles_people", "person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Movies.FK_roles_people", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Movies.FK_roles_people", "person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("Movies.FK_roles_people", "person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("Movies.FK_roles_people", "person", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Movies", Name="Location")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Location : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        public static Location CreateLocation(global::System.String city, global::System.String state, global::System.String country)
        {
            Location location = new Location();
            location.City = city;
            location.State = state;
            location.Country = country;
            return location;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        #endregion

    }

    #endregion

    
}
