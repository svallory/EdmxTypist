//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("InflectorTestModel", "FK_pedidos_usuarios", "usuarios", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EdmxTypist.resources.Usuario), "pedidos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EdmxTypist.resources.Pedido), true)]

#endregion

namespace EdmxTypist.resources
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class InflectorTestEntitiesProcessed : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new InflectorTestEntitiesProcessed object using the connection string found in the 'InflectorTestEntitiesProcessed' section of the application configuration file.
        /// </summary>
        public InflectorTestEntitiesProcessed() : base("name=InflectorTestEntitiesProcessed", "InflectorTestEntitiesProcessed")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new InflectorTestEntitiesProcessed object.
        /// </summary>
        public InflectorTestEntitiesProcessed(string connectionString) : base(connectionString, "InflectorTestEntitiesProcessed")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new InflectorTestEntitiesProcessed object.
        /// </summary>
        public InflectorTestEntitiesProcessed(EntityConnection connection) : base(connection, "InflectorTestEntitiesProcessed")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Pedido> Pedidos
        {
            get
            {
                if ((_Pedidos == null))
                {
                    _Pedidos = base.CreateObjectSet<Pedido>("Pedidos");
                }
                return _Pedidos;
            }
        }
        private ObjectSet<Pedido> _Pedidos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Usuario> Usuarios
        {
            get
            {
                if ((_Usuarios == null))
                {
                    _Usuarios = base.CreateObjectSet<Usuario>("Usuarios");
                }
                return _Usuarios;
            }
        }
        private ObjectSet<Usuario> _Usuarios;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pedidos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPedidos(Pedido pedido)
        {
            base.AddObject("Pedidos", pedido);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Usuarios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsuarios(Usuario usuario)
        {
            base.AddObject("Usuarios", usuario);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="user_id">No Metadata Documentation available.</param>
        public ObjectResult<Usuario> GetPedidos(Nullable<global::System.Int32> user_id)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Usuario>("GetPedidos", user_idParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="user_id">No Metadata Documentation available.</param>
        public ObjectResult<Usuario> GetPedidos(Nullable<global::System.Int32> user_id, MergeOption mergeOption)
        {
            ObjectParameter user_idParameter;
            if (user_id.HasValue)
            {
                user_idParameter = new ObjectParameter("user_id", user_id);
            }
            else
            {
                user_idParameter = new ObjectParameter("user_id", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Usuario>("GetPedidos", mergeOption, user_idParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InflectorTestModel", Name="Pedido")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Pedido : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Pedido object.
        /// </summary>
        /// <param name="pedidoId">Initial value of the PedidoId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Pedido CreatePedido(global::System.Int32 pedidoId, global::System.Int32 userId)
        {
            Pedido pedido = new Pedido();
            pedido.PedidoId = pedidoId;
            pedido.UserId = userId;
            return pedido;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PedidoId
        {
            get
            {
                return _PedidoId;
            }
            set
            {
                if (_PedidoId != value)
                {
                    OnPedidoIdChanging(value);
                    ReportPropertyChanging("PedidoId");
                    _PedidoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PedidoId");
                    OnPedidoIdChanged();
                }
            }
        }
        private global::System.Int32 _PedidoId;
        partial void OnPedidoIdChanging(global::System.Int32 value);
        partial void OnPedidoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> QtdParcelas
        {
            get
            {
                return _QtdParcelas;
            }
            set
            {
                OnQtdParcelasChanging(value);
                ReportPropertyChanging("QtdParcelas");
                _QtdParcelas = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QtdParcelas");
                OnQtdParcelasChanged();
            }
        }
        private Nullable<global::System.Int16> _QtdParcelas;
        partial void OnQtdParcelasChanging(Nullable<global::System.Int16> value);
        partial void OnQtdParcelasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> BonusPontosBoleto
        {
            get
            {
                return _BonusPontosBoleto;
            }
            set
            {
                OnBonusPontosBoletoChanging(value);
                ReportPropertyChanging("BonusPontosBoleto");
                _BonusPontosBoleto = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusPontosBoleto");
                OnBonusPontosBoletoChanged();
            }
        }
        private Nullable<global::System.Boolean> _BonusPontosBoleto;
        partial void OnBonusPontosBoletoChanging(Nullable<global::System.Boolean> value);
        partial void OnBonusPontosBoletoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> BonusPontosBoletoCreditado
        {
            get
            {
                return _BonusPontosBoletoCreditado;
            }
            set
            {
                OnBonusPontosBoletoCreditadoChanging(value);
                ReportPropertyChanging("BonusPontosBoletoCreditado");
                _BonusPontosBoletoCreditado = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusPontosBoletoCreditado");
                OnBonusPontosBoletoCreditadoChanged();
            }
        }
        private Nullable<global::System.Boolean> _BonusPontosBoletoCreditado;
        partial void OnBonusPontosBoletoCreditadoChanging(Nullable<global::System.Boolean> value);
        partial void OnBonusPontosBoletoCreditadoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private Nullable<global::System.Int32> _Total;
        partial void OnTotalChanging(Nullable<global::System.Int32> value);
        partial void OnTotalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InflectorTestModel", "FK_pedidos_usuarios", "usuarios")]
        public Usuario Usuario
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("InflectorTestModel.FK_pedidos_usuarios", "usuarios").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("InflectorTestModel.FK_pedidos_usuarios", "usuarios").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Usuario> UsuarioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Usuario>("InflectorTestModel.FK_pedidos_usuarios", "usuarios");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Usuario>("InflectorTestModel.FK_pedidos_usuarios", "usuarios", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InflectorTestModel", Name="Usuario")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Usuario : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Usuario object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="endereco">Initial value of the Endereco property.</param>
        public static Usuario CreateUsuario(global::System.Int32 userId, Endereco endereco)
        {
            Usuario usuario = new Usuario();
            usuario.UserId = userId;
            usuario.Endereco = StructuralObject.VerifyComplexObjectIsNotNull(endereco, "Endereco");
            return usuario;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sexo
        {
            get
            {
                return _Sexo;
            }
            set
            {
                OnSexoChanging(value);
                ReportPropertyChanging("Sexo");
                _Sexo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sexo");
                OnSexoChanged();
            }
        }
        private global::System.String _Sexo;
        partial void OnSexoChanging(global::System.String value);
        partial void OnSexoChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Endereco Endereco
        {
            get
            {
                _Endereco = GetValidValue(_Endereco, "Endereco", false, _EnderecoInitialized);
                _EnderecoInitialized = true;
                return _Endereco;
            }
            set
            {
                OnEnderecoChanging(value);
                ReportPropertyChanging("Endereco");
                _Endereco = SetValidValue(_Endereco, value, "Endereco");
                _EnderecoInitialized = true;
                ReportPropertyChanged("Endereco");
                OnEnderecoChanged();
            }
        }
        private Endereco _Endereco;
        private bool _EnderecoInitialized;
        partial void OnEnderecoChanging(Endereco value);
        partial void OnEnderecoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InflectorTestModel", "FK_pedidos_usuarios", "pedidos")]
        public EntityCollection<Pedido> Pedidos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Pedido>("InflectorTestModel.FK_pedidos_usuarios", "pedidos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Pedido>("InflectorTestModel.FK_pedidos_usuarios", "pedidos", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="InflectorTestModel", Name="Endereco")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Endereco : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cep
        {
            get
            {
                return _Cep;
            }
            set
            {
                OnCepChanging(value);
                ReportPropertyChanging("Cep");
                _Cep = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cep");
                OnCepChanged();
            }
        }
        private global::System.String _Cep;
        partial void OnCepChanging(global::System.String value);
        partial void OnCepChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cidade
        {
            get
            {
                return _Cidade;
            }
            set
            {
                OnCidadeChanging(value);
                ReportPropertyChanging("Cidade");
                _Cidade = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cidade");
                OnCidadeChanged();
            }
        }
        private global::System.String _Cidade;
        partial void OnCidadeChanging(global::System.String value);
        partial void OnCidadeChanged();

        #endregion

    }

    #endregion

    
}
